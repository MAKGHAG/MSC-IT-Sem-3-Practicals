import numpy as np
import pandas as pd
from pgmpy.models import BayesianNetwork
from pgmpy.estimators import ParameterEstimator, MaximumLikelihoodEstimator, BayesianEstimator
from pgmpy.inference import VariableElimination

# Mock data: in practice, load a dataset using pandas (e.g., pd.read_csv)
data = pd.DataFrame(data={'Age': np.random.randint(30, 80, size=100),
                          'Sex': np.random.randint(0, 2, size=100),
                          'CP': np.random.randint(1, 5, size=100),
                          'HeartDisease': np.random.randint(0, 2, size=100)})

# Define the model structure
model = BayesianNetwork([('Age', 'HeartDisease'), ('Sex', 'HeartDisease'), ('CP', 'HeartDisease')])

# Learn model parameters
model.fit(data, estimator=MaximumLikelihoodEstimator)

# Inference
inference = VariableElimination(model)

# Querying the network
q = inference.query(variables=['HeartDisease'], evidence={'Age': 50, 'Sex': 1, 'CP': 3})
print(q)